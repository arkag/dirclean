name: Build and Version

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  version:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to create a release and upload assets

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout
        with:
          fetch-depth: 0  # Fetch all history for GitVersion to work correctly

      # Set up GitVersion
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup
        with:
          versionSpec: '5.x'  # Use GitVersion 6.x (latest as of February 2025)

      # Calculate the next version
      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute
        with:
          useConfigFile: false  # Use a GitVersion configuration file (optional)

      # Create a new Git tag
      - name: Create Git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ steps.gitversion.outputs.semVer }}
          git push origin ${{ steps.gitversion.outputs.semVer }}

  build:
    runs-on: ubuntu-latest
    needs: version  # Ensure the version job runs first

    permissions:
      contents: write  # Required to create a release and upload assets

    strategy:
      matrix:
        platform:
          - os: darwin
            arch: arm64
            binary_name: dirclean-darwin-arm64
          - os: linux
            arch: amd64
            binary_name: dirclean-linux-amd64

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go
        with:
          go-version: '>=1.21'

      # Build the Go program for the target platform
      - name: Build
        run: |
          GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o ${{ matrix.platform.binary_name }} ./dirclean.go

      # Upload the compiled binary as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact
        with:
          name: ${{ matrix.platform.binary_name }}
          path: ${{ matrix.platform.binary_name }}

  release:
    runs-on: ubuntu-latest
    needs: [version, build]  # Ensure version and build jobs run first

    permissions:
      contents: write  # Required to create a release and upload assets

    steps:
      # Download all artifacts from the build job
      - name: Download artifacts
        uses: actions/download-artifact
        with:
          path: artifacts

      # Install GitReleaseManager
      - name: Install GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup
        with:
          versionSpec: '0.18.x'

      # Create a release
      - name: Create release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/create
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'arkag'
          repository: 'dirclean'
          milestone: ${{ needs.version.outputs.semVer }}
          name: Release ${{ needs.version.outputs.semVer }}
          assets: artifacts/*